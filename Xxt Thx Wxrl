local blacklist = {
    [0000000000] = true, -- jugador 1
    [0000000001] = true, -- jugador 2
}

-- Revisar si el jugador está en la blacklist
local playerId = game.Players.LocalPlayer.UserId
if blacklist[playerId] then
    -- Kickear al jugador directamente
    game.Players.LocalPlayer:Kick("Sherya On Top BAHAHAHA")
end

local Players = game:GetService("Players")
local player = Players.LocalPlayer

local displayName = player.DisplayName
if not displayName or displayName == "" then
    displayName = player.Name
end

local title = ("Galaxy XVI | Welcome %s"):format(displayName)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CoronaBlanca/25092009UI/refs/heads/main/Xlxrxxm%20bx%20shxryx"))()

local window = library:AddWindow(title, {
    main_color = Color3.fromRGB(75, 0, 130),
    min_size = Vector2.new(600, 800),
    can_resize = true,
})
local mainTab = window:AddTab("Main")

mainTab:AddLabel("Welcome To Galaxy Hub >_<").TextSize  = 26
mainTab:AddLabel("Simple Farm")

-- 🟣 Auto Walk Random (sin folder)
local player = game.Players.LocalPlayer
local humanoid = nil
local autoWalkEnabled = false
local autoWalkConnection

-- 🧠 Función para obtener una dirección aleatoria
local function getRandomDirection()
    local randomX = math.random(-1, 1)
    local randomZ = math.random(-1, 1)
    local direction = Vector3.new(randomX, 0, randomZ)
    if direction.Magnitude == 0 then
        direction = Vector3.new(0, 0, 1)
    end
    return direction.Unit
end

-- 🚶‍♂️ Movimiento aleatorio constante
local function startAutoWalk()
    while autoWalkEnabled do
        pcall(function()
            if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("HumanoidRootPart") then
                humanoid = player.Character.Humanoid
                local root = player.Character.HumanoidRootPart

                -- Calcular dirección aleatoria y punto a moverse
                local direction = getRandomDirection()
                local distance = math.random(10, 30)
                local moveToPos = root.Position + direction * distance

                humanoid:MoveTo(moveToPos)
            end
        end)
        task.wait(math.random(3, 6)) -- Intervalo entre movimientos
    end
end

-- 🔄 Switch principal en miscTab
mainTab:AddSwitch("Auto Walk Random", function(bool)
    autoWalkEnabled = bool

    if autoWalkEnabled then
        if player.Character then
            humanoid = player.Character:WaitForChild("Humanoid")
        end

        -- Reconectar al respawn
        if autoWalkConnection then
            autoWalkConnection:Disconnect()
        end
        autoWalkConnection = player.CharacterAdded:Connect(function(character)
            humanoid = character:WaitForChild("Humanoid")
        end)

        -- Iniciar movimiento automático
        task.spawn(startAutoWalk)
    else
        if autoWalkConnection then
            autoWalkConnection:Disconnect()
            autoWalkConnection = nil
        end
        if humanoid then
            humanoid:Move(Vector3.zero)
        end
    end
end)

-- 🟣 Auto Click (Elerium Style)
local VirtualUser = game:GetService("VirtualUser")
local autoClickEnabled = false

mainTab:AddSwitch("Auto Click", function(bool)
    autoClickEnabled = bool

    if autoClickEnabled then
        task.spawn(function()
            while autoClickEnabled do
                pcall(function()
                    VirtualUser:Button1Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                    task.wait(0.1)
                    VirtualUser:Button1Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                end)
                task.wait(0.1) -- velocidad del auto click (0.1 = 10 clicks por segundo aprox)
            end
        end)
    end
end)

local miscTab = window:AddTab("Misc")

miscTab:AddLabel("Misc").TextSize  = 24

miscTab:AddLabel("-----{Speed}-----")

-- Variable global para la velocidad
local player = game.Players.LocalPlayer
local speedValue = 16
local autoSpeedEnabled = false
local autoSpeedConnection

-- TextBox para ajustar la velocidad manualmente
miscTab:AddTextBox("Auto Speed", function(text)
    speedValue = tonumber(text) or 16
end, "Ingresa la velocidad deseada")

-- Función que aplica la velocidad fija constantemente
local function applyConstantSpeed()
    while autoSpeedEnabled do
        pcall(function()
            if player and player.Character and player.Character:FindFirstChild("Humanoid") then
                local humanoid = player.Character.Humanoid
                if humanoid.WalkSpeed ~= speedValue then
                    humanoid.WalkSpeed = speedValue
                end
            end
        end)
        task.wait(0.1) -- Ajusta este valor si quieres que se actualice más rápido o más lento
    end
end

-- Switch principal
local autoSpeedSwitch = miscTab:AddSwitch("Auto Set Speed", function(bool)
    autoSpeedEnabled = bool

    if autoSpeedEnabled then
        -- Aplicar la velocidad actual
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = speedValue
        end

        -- Reaplicar velocidad al respawnear
        if autoSpeedConnection then
            autoSpeedConnection:Disconnect()
        end

        autoSpeedConnection = player.CharacterAdded:Connect(function(character)
            local humanoid = character:WaitForChild("Humanoid")
            humanoid.WalkSpeed = speedValue
        end)

        -- Mantener la velocidad fija en un loop
        task.spawn(applyConstantSpeed)
    else
        if autoSpeedConnection then
            autoSpeedConnection:Disconnect()
            autoSpeedConnection = nil
        end
    end
end)

miscTab:AddLabel("-----{Jump Power}-----")

local player = game.Players.LocalPlayer
local jumpPowerValue = 50 -- Valor predeterminado del salto
local autoJumpEnabled = false
local autoJumpConnection

-- TextBox para ajustar el salto manualmente
miscTab:AddTextBox("Auto Jump Power", function(text)
    jumpPowerValue = tonumber(text) or 50
end, "Ingresa la fuerza de salto deseada")

-- Función que aplica el JumpPower constantemente
local function applyConstantJump()
    while autoJumpEnabled do
        pcall(function()
            if player and player.Character and player.Character:FindFirstChild("Humanoid") then
                local humanoid = player.Character.Humanoid
                if humanoid.UseJumpPower == false then
                    humanoid.UseJumpPower = true
                end
                if humanoid.JumpPower ~= jumpPowerValue then
                    humanoid.JumpPower = jumpPowerValue
                end
            end
        end)
        task.wait(0.1)
    end
end

-- Switch principal
local autoJumpSwitch = miscTab:AddSwitch("Auto Set Jump", function(bool)
    autoJumpEnabled = bool

    if autoJumpEnabled then
        -- Aplicar el JumpPower actual
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            local humanoid = player.Character.Humanoid
            humanoid.UseJumpPower = true
            humanoid.JumpPower = jumpPowerValue
        end

        -- Reaplicar al respawnear
        if autoJumpConnection then
            autoJumpConnection:Disconnect()
        end

        autoJumpConnection = player.CharacterAdded:Connect(function(character)
            local humanoid = character:WaitForChild("Humanoid")
            humanoid.UseJumpPower = true
            humanoid.JumpPower = jumpPowerValue
        end)

        -- Mantener el valor constante
        task.spawn(applyConstantJump)
    else
        if autoJumpConnection then
            autoJumpConnection:Disconnect()
            autoJumpConnection = nil
        end
    end
end)

miscTab:AddLabel("-----{Extras}-----")

local infiniteJumpSwitch = miscTab:AddSwitch("Infinite Jump", function(bool)
    if bool then
        local infiniteJumpConnection
        infiniteJumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
            if player.Character and player.Character:FindFirstChild("Humanoid") then
                player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)

        infiniteJumpSwitch._connection = infiniteJumpConnection
    else
        if infiniteJumpSwitch._connection then
            infiniteJumpSwitch._connection:Disconnect()
            infiniteJumpSwitch._connection = nil
        end
    end
end)

local noClipSwitch = miscTab:AddSwitch("No Clip", function(bool)
    if bool then
        local noclipLoop = game:GetService("RunService").Stepped:Connect(function()
            for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if child:IsA("BasePart") and child.CanCollide == true then
                    child.CanCollide = false
                end
            end
        end)

        noClipSwitch._noclipLoop = noclipLoop
    else
        if noClipSwitch._noclipLoop then
            noClipSwitch._noclipLoop:Disconnect()
            noClipSwitch._noclipLoop = nil
        end

        for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if child:IsA("BasePart") then
                child.CanCollide = true
            end
        end
    end
end)

miscTab:AddLabel("-----{Time}-----")

local timeDropdown =
    miscTab:AddDropdown(
    "Change Time",
    function(selection)
        local lighting = game:GetService("Lighting")

        if selection == "Night" then
            lighting.ClockTime = 0
        elseif selection == "Day" then
            lighting.ClockTime = 12
        elseif selection == "Midnight" then
            lighting.ClockTime = 6
        end
    end
)

timeDropdown:Add("Night")
timeDropdown:Add("Day")
timeDropdown:Add("Midnight")

miscTab:AddLabel("-----{Server}-----")

miscTab:AddButton("Rejoin Server", function()
    local TeleportService = game:GetService("TeleportService")
    
    -- Obtener servidores disponibles y unirse a uno aleatorio
    local success, result = pcall(function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId, nil, player)
    end)
    
    if not success then
        -- Si falla, intentar teleport normal a un nuevo servidor
        TeleportService:Teleport(game.PlaceId, player)
    end
    
    print("Cambiando a otro servidor...")
end)

miscTab:AddLabel("-----{External scripts}-----")

miscTab:AddButton("Infinite Yield", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

miscTab:AddButton("GhostX Hub", function()
    loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-GhostX-Hub-7158"))()
end)

local killerTab = window:AddTab("Killer")
local teleportTab = window:AddTab("Teleport")

local creditsTab = window:AddTab("Credits")

creditsTab:AddLabel("╭──────────────────────────╮")
creditsTab:AddLabel("         Galaxy Hub")
creditsTab:AddLabel("╰──────────────────────────╯")
creditsTab:AddLabel("")
creditsTab:AddLabel("Script Made By")
creditsTab:AddLabel("")
creditsTab:AddLabel("Sherya (Isabella)")
creditsTab:AddLabel("")
creditsTab:AddLabel("Instagram : sheryaluck")
creditsTab:AddLabel("Tik tok : xvishxrys")
creditsTab:AddLabel("Discord : isabella_hrz")
creditsTab:AddLabel("Roblox : MissSherya")
creditsTab:AddLabel("")
creditsTab:AddLabel("Thanks for using the script")
creditsTab:AddLabel("Errors to MD")
creditsTab:AddLabel("")

creditsTab:AddButton("Servidor Discord", function()
    setclipboard("https://discord.gg/zYrg2qPjTp")
end)
