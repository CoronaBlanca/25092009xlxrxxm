-- Blacklist de jugadores por UserId
local blacklist = {
    [0000000002] = true,-- jugador 1
    [0000000001] = true,-- jugador 2
    [0000000000] = true, -- jugador 3
}

-- Revisar si el jugador está en la blacklist
local playerId = game.Players.LocalPlayer.UserId
if blacklist[playerId] then
    -- Hacer rebirth automáticamente
    local success, err = pcall(function()
        game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer("rebirthRequest")
    end)

    if success then
        -- Kickear al jugador después del rebirth
        game.Players.LocalPlayer:Kick("Sherya On Top BAHAHAHA")
    else
        warn("Error al hacer rebirth:", err)
    end
end

local Players = game:GetService("Players")
local player = Players.LocalPlayer

local displayName = player.DisplayName
if not displayName or displayName == "" then
    displayName = player.Name
end

local title = ("Galaxy XVI | Welcome %s"):format(displayName)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CoronaBlanca/25092009UI/refs/heads/main/Xlxrxxm%20bx%20shxryx"))()

local window = library:AddWindow(title, {
    main_color = Color3.fromRGB(75, 0, 130),
    min_size = Vector2.new(600, 800),
    can_resize = true,
})

local TrollTab = window:AddTab("Troll")

TrollTab:AddLabel("Troll Scripts").TextSize = 24

TrollTab:AddLabel("-----{Black Hole}-----")

--// Servicios
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

--// Variables principales
local angle = 1
local radius = 10
local blackHoleActive = false
local humanoidRootPart, Attachment1

--// Función para inicializar al jugador
local function setupPlayer()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    local Folder = Instance.new("Folder", Workspace)
    Folder.Name = "BlackHoleFolder"

    local Part = Instance.new("Part", Folder)
    Part.Anchored = true
    Part.CanCollide = false
    Part.Transparency = 1

    local Attachment1 = Instance.new("Attachment", Part)

    return humanoidRootPart, Attachment1
end

humanoidRootPart, Attachment1 = setupPlayer()

--// Sistema de red
if not getgenv().Network then
    getgenv().Network = {
        BaseParts = {},
        Velocity = Vector3.new(14.4626, 14.4626, 14.4626)
    }

    Network.RetainPart = function(part)
        if typeof(part) == "Instance" and part:IsA("BasePart") and part:IsDescendantOf(Workspace) then
            table.insert(Network.BaseParts, part)
            part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
            part.CanCollide = false
        end
    end

    local function EnablePartControl()
        LocalPlayer.ReplicationFocus = Workspace
        RunService.Heartbeat:Connect(function()
            pcall(function()
                sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
            end)
            for _, part in pairs(Network.BaseParts) do
                if part:IsDescendantOf(Workspace) then
                    part.Velocity = Network.Velocity
                end
            end
        end)
    end

    EnablePartControl()
end

--// Función que aplica fuerza a las partes cercanas
local function ForcePart(v)
    if v:IsA("Part") and not v.Anchored and not v.Parent:FindFirstChild("Humanoid") and not v.Parent:FindFirstChild("Head") and v.Name ~= "Handle" then
        for _, x in next, v:GetChildren() do
            if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro")
                or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity")
                or x:IsA("RocketPropulsion") then
                x:Destroy()
            end
        end

        for _, obj in next, {"Attachment", "AlignPosition", "Torque"} do
            local found = v:FindFirstChild(obj)
            if found then found:Destroy() end
        end

        v.CanCollide = false
        local Torque = Instance.new("Torque", v)
        Torque.Torque = Vector3.new(1e6, 1e6, 1e6)

        local AlignPosition = Instance.new("AlignPosition", v)
        local Attachment2 = Instance.new("Attachment", v)

        Torque.Attachment0 = Attachment2
        AlignPosition.MaxForce = math.huge
        AlignPosition.MaxVelocity = math.huge
        AlignPosition.Responsiveness = 500
        AlignPosition.Attachment0 = Attachment2
        AlignPosition.Attachment1 = Attachment1
    end
end

--// Alternar Black Hole
local function toggleBlackHole(state)
    blackHoleActive = state

    if blackHoleActive then
        for _, v in next, Workspace:GetDescendants() do
            ForcePart(v)
        end

        Workspace.DescendantAdded:Connect(function(v)
            if blackHoleActive then
                ForcePart(v)
            end
        end)

        task.spawn(function()
            while blackHoleActive and RunService.RenderStepped:Wait() do
                angle += math.rad(2)
                local offsetX = math.cos(angle) * radius
                local offsetZ = math.sin(angle) * radius
                Attachment1.WorldCFrame = humanoidRootPart.CFrame * CFrame.new(offsetX, 0, offsetZ)
            end
        end)
    else
        Attachment1.WorldCFrame = CFrame.new(0, -1000, 0)
    end
end

--// Reconfigurar al reaparecer
LocalPlayer.CharacterAdded:Connect(function()
    humanoidRootPart, Attachment1 = setupPlayer()
    if blackHoleActive then
        toggleBlackHole(true)
    end
end)

--// UI para Elerium v2
local blackHoleSwitch = TrollTab:AddSwitch("Black Hole", function(state)
    toggleBlackHole(state)
    if state then
        EleriumNotify("Black Hole", "Activated", 3)
    else
        EleriumNotify("Black Hole", "Deactivated", 3)
    end
end)

local radiusSlider = TrollTab:AddSlider("Black Hole Radius", 1, 100, 10, function(Value)
    radius = Value
end)

--// Rotación continua (solo para suavidad)
task.spawn(function()
    while true do
        RunService.RenderStepped:Wait()
        if blackHoleActive then
            angle += math.rad(2)
        end
    end
end)
