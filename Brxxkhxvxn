-- Galaxy Hub (estilo Lunar Hub) - Script completo
-- Compatible con Delta / Fluxus / Arceus X / Hydrogen, etc.
-- Hecho con Instance.new y TweenService. Sin librerías externas.

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ---------- CONFIG (edítalo aquí) ----------
local DISCORD_LINK = "https://discord.gg/zYrg2qPjTp"

-- Texto que aparecerá en Galaxy Updates (edítalo aqui)
local UPDATES_TEXT = [[
⭐ Bienvenido a Galaxy Hub!

- Aquí puedes escribir tus notas o actualizaciones directamente en el script.
- Ejemplo:
  • Se agregó sistema de rebirths.
  • Mejoras visuales.
  • Correcciones de bugs.

(Desliza para ver más...)
]]

-- Nombres de botones en Librarys (los scripts los agregarás tú dentro de los callbacks)
local LIB_BUTTONS = {"Elerium", "Fluent", "Tottack", "Galaxy"}
-- ---------- FIN CONFIG ----------

-- Helper: crea instancias con propiedades
local function new(class, props)
    local obj = Instance.new(class)
    if props then
        for k,v in pairs(props) do obj[k] = v end
    end
    return obj
end

-- Colores estilo Lunar Hub
local Colors = {
    BG = Color3.fromRGB(18, 14, 26),        -- fondo
    Panel = Color3.fromRGB(22, 18, 36),     -- panel oscuro
    Accent = Color3.fromRGB(130, 90, 200),  -- morado neón
    LightText = Color3.fromRGB(200, 180, 255),
    ButtonHover = Color3.fromRGB(160, 120, 230)
}

-- Guarda referencias para cerrar/destruir
local gui = {}

-- ---------- CREAR UI ----------
local function createUI()
    -- ScreenGui
    local screenGui = new("ScreenGui", {Name = "GalaxyHub_UI", ResetOnSpawn = false, ZIndexBehavior = Enum.ZIndexBehavior.Sibling})
    screenGui.Parent = PlayerGui
    gui.screenGui = screenGui

    -- Black overlay (ligero) para enfocar
    local overlay = new("Frame", {
        Name = "Overlay",
        Parent = screenGui,
        BackgroundColor3 = Color3.new(0,0,0),
        BackgroundTransparency = 0.5,
        Size = UDim2.new(1,0,1,0),
        Position = UDim2.new(0,0,0,0),
        ZIndex = 1
    })
    overlay.Visible = false
    gui.overlay = overlay

    -- Main frame (centrado)
    local main = new("Frame", {
        Name = "Main",
        Parent = screenGui,
        AnchorPoint = Vector2.new(0.5,0.5),
        Position = UDim2.new(0.5,0,0.5,0),
        Size = UDim2.new(0,720,0,380),
        BackgroundColor3 = Colors.Panel,
        BorderSizePixel = 0,
        ZIndex = 2,
    })
    main.ClipsDescendants = true
    gui.main = main

    -- Round corners
    local mainCorner = new("UICorner", {CornerRadius = UDim.new(0, 14), Parent = main})
    local mainStroke = new("UIStroke", {
        Parent = main,
        Color = Colors.Accent,
        Thickness = 1.5,
        Transparency = 0.4
    })

    -- Header (titulo y close)
    local header = new("Frame", {
        Name = "Header",
        Parent = main,
        BackgroundTransparency = 1,
        Size = UDim2.new(1,0,0,48),
        Position = UDim2.new(0,0,0,0)
    })
    local title = new("TextLabel", {
        Name = "Title",
        Parent = header,
        BackgroundTransparency = 1,
        Position = UDim2.new(0.02,0,0,8),
        Size = UDim2.new(0.6,0,1,0),
        Text = "Galaxy Hub",
        Font = Enum.Font.GothamBold,
        TextSize = 20,
        TextColor3 = Colors.LightText,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    -- Close button (X) arriba a la derecha
    local closeBtn = new("TextButton", {
        Name = "CloseBtn",
        Parent = header,
        AnchorPoint = Vector2.new(1,0),
        Position = UDim2.new(0.98,0,0,6),
        Size = UDim2.new(0,36,0,36),
        BackgroundTransparency = 0,
        AutoButtonColor = false,
        BackgroundColor3 = Color3.fromRGB(255,255,255),
        Text = "✕",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = Colors.LightText
    })
    new("UICorner", {Parent = closeBtn, CornerRadius = UDim.new(0,8)})
    local closeStroke = new("UIStroke", {Parent = closeBtn, Color = Colors.Accent, Thickness = 1})

    -- CONTENT: 3 columnas (Updates | Librarys | Discord)
    local content = new("Frame", {
        Name = "Content",
        Parent = main,
        BackgroundTransparency = 1,
        Position = UDim2.new(0,0,0,48),
        Size = UDim2.new(1,0,1,-48)
    })

    -- column sizes
    local colWidth = (1/3)

    -- 1) Galaxy Updates (scrollable)
    local updatesFrame = new("Frame", {
        Name = "UpdatesFrame",
        Parent = content,
        BackgroundColor3 = Colors.BG,
        Position = UDim2.new(0,18,0,18),
        Size = UDim2.new(colWidth, -30, 1, -36),
        BorderSizePixel = 0
    })
    new("UICorner", {Parent = updatesFrame, CornerRadius = UDim.new(0,12)})
    new("UIStroke", {Parent = updatesFrame, Color = Colors.Accent, Thickness = 1})

    local updatesTitle = new("TextLabel", {
        Parent = updatesFrame,
        BackgroundTransparency = 1,
        Position = UDim2.new(0,12,0,8),
        Size = UDim2.new(1,-24,0,26),
        Text = "Galaxy Updates",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Colors.LightText,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    local scroll = new("ScrollingFrame", {
        Parent = updatesFrame,
        Name = "Scroll",
        BackgroundTransparency = 1,
        Position = UDim2.new(0,10,0,40),
        Size = UDim2.new(1,-20,1,-50),
        CanvasSize = UDim2.new(0,0,0,0),
        ScrollBarThickness = 6,
    })
    local scrollCorner = new("UICorner", {Parent = scroll, CornerRadius = UDim.new(0,8)})
    local contentHolder = new("Frame", {Parent = scroll, BackgroundTransparency = 1, Size = UDim2.new(1,0,0,0)})
    contentHolder.Name = "ContentHolder"

    local updatesLabel = new("TextLabel", {
        Parent = contentHolder,
        Name = "UpdatesLabel",
        BackgroundTransparency = 1,
        Size = UDim2.new(1,0,0,0), -- Height ajustado luego por texto
        Position = UDim2.new(0,0,0,0),
        Text = UPDATES_TEXT,
        Font = Enum.Font.Gotham,
        TextSize = 14,
        TextWrapped = true,
        TextYAlignment = Enum.TextYAlignment.Top,
        TextColor3 = Colors.LightText
    })

    -- Ajusta CanvasSize según contenido
    updatesLabel:GetPropertyChangedSignal("TextBounds"):Connect(function()
        local tb = updatesLabel.TextBounds
        updatesLabel.Size = UDim2.new(1, -6, 0, tb.Y + 8)
        contentHolder.Size = UDim2.new(1,0,0, tb.Y + 12)
        scroll.CanvasSize = UDim2.new(0,0,0, tb.Y + 14)
    end)

    -- 2) Librarys (botones)
    local libFrame = new("Frame", {
        Name = "LibrarysFrame",
        Parent = content,
        BackgroundColor3 = Colors.BG,
        Position = UDim2.new(colWidth, 0, 0, 18),
        Size = UDim2.new(colWidth, -18, 1, -36),
        BorderSizePixel = 0
    })
    new("UICorner", {Parent = libFrame, CornerRadius = UDim.new(0,12)})
    new("UIStroke", {Parent = libFrame, Color = Colors.Accent, Thickness = 1})

    local libTitle = new("TextLabel", {
        Parent = libFrame,
        BackgroundTransparency = 1,
        Position = UDim2.new(0,12,0,8),
        Size = UDim2.new(1,-24,0,26),
        Text = "Librarys",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Colors.LightText,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    local btnContainer = new("Frame", {
        Parent = libFrame,
        BackgroundTransparency = 1,
        Position = UDim2.new(0,10,0,46),
        Size = UDim2.new(1,-20,1,-56)
    })

    -- Crear 4 botones (vertical)
    local btnHeight = 48
    local spacing = 12
    for i, name in ipairs(LIB_BUTTONS) do
        local yPos = (i-1) * (btnHeight + spacing)
        local b = new("TextButton", {
            Parent = btnContainer,
            Name = "Btn_"..name,
            Position = UDim2.new(0, 0, 0, yPos),
            Size = UDim2.new(1, 0, 0, btnHeight),
            BackgroundColor3 = Color3.fromRGB(28,24,44),
            AutoButtonColor = false,
            Text = name,
            Font = Enum.Font.GothamBold,
            TextSize = 16,
            TextColor3 = Colors.LightText
        })
        new("UICorner", {Parent = b, CornerRadius = UDim.new(0,10)})
        new("UIStroke", {Parent = b, Color = Colors.Accent, Thickness = 1})

        -- hover effect
        b.MouseEnter:Connect(function()
            TweenService:Create(b, TweenInfo.new(0.18, Enum.EasingStyle.Quad), {BackgroundColor3 = Colors.ButtonHover}):Play()
        end)
        b.MouseLeave:Connect(function()
            TweenService:Create(b, TweenInfo.new(0.18, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(28,24,44)}):Play()
        end)

        -- Click - placeholder: el usuario añadirá su script aquí
        b.MouseButton1Click:Connect(function()
            -- Aquí puedes pegar tu script para cada botón. Ejemplo:
            -- loadstring("print('Elerium script ejecutado')")()
            -- Para seguridad, dejé vacío para que tú pegues tu código.
            pcall(function()
                -- Ejemplo de notificación visual
                local notif = new("TextLabel", {
                    Parent = b,
                    AnchorPoint = Vector2.new(0.5,0.5),
                    Position = UDim2.new(0.5,0.5,0,0),
                    BackgroundTransparency = 1,
                    Size = UDim2.new(0.95,0,0.9,0),
                    Text = "Executing "..name.." ...",
                    Font = Enum.Font.Gotham,
                    TextSize = 14,
                    TextColor3 = Colors.LightText
                })
                game:GetService("Debris"):AddItem(notif, 0.8)
            end)
        end)
    end

    -- 3) Discord (solo botón copiar)
    local discordFrame = new("Frame", {
        Name = "DiscordFrame",
        Parent = content,
        BackgroundColor3 = Colors.BG,
        Position = UDim2.new(colWidth*2, 0, 0, 18),
        Size = UDim2.new(colWidth, -18, 1, -36),
        BorderSizePixel = 0
    })
    new("UICorner", {Parent = discordFrame, CornerRadius = UDim.new(0,12)})
    new("UIStroke", {Parent = discordFrame, Color = Colors.Accent, Thickness = 1})

    local discordTitle = new("TextLabel", {
        Parent = discordFrame,
        BackgroundTransparency = 1,
        Position = UDim2.new(0,12,0,8),
        Size = UDim2.new(1,-24,0,26),
        Text = "Discord",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Colors.LightText,
        TextXAlignment = Enum.TextXAlignment.Left
    })

    local copyBtn = new("TextButton", {
        Parent = discordFrame,
        Name = "CopyBtn",
        Position = UDim2.new(0,12,0,46),
        Size = UDim2.new(1,-24,0,44),
        BackgroundColor3 = Color3.fromRGB(28,24,44),
        Text = "📋 Copy Discord",
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        TextColor3 = Colors.LightText,
        AutoButtonColor = false
    })
    new("UICorner", {Parent = copyBtn, CornerRadius = UDim.new(0,10)})
    new("UIStroke", {Parent = copyBtn, Color = Colors.Accent, Thickness = 1})

    copyBtn.MouseEnter:Connect(function()
        TweenService:Create(copyBtn, TweenInfo.new(0.18, Enum.EasingStyle.Quad), {BackgroundColor3 = Colors.ButtonHover}):Play()
    end)
    copyBtn.MouseLeave:Connect(function()
        TweenService:Create(copyBtn, TweenInfo.new(0.18, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(28,24,44)}):Play()
    end)

    copyBtn.MouseButton1Click:Connect(function()
        local ok, err = pcall(function()
            setclipboard(DISCORD_LINK)
        end)
        -- Simple feedback: texto temporal
        if ok then
            local old = copyBtn.Text
            copyBtn.Text = "Copied!"
            delay(1.2, function() if copyBtn and copyBtn.Parent then copyBtn.Text = old end end)
        else
            -- si el exploit no soporta setclipboard, mostrar mensaje
            copyBtn.Text = "Copy failed"
            delay(1.2, function() if copyBtn and copyBtn.Parent then copyBtn.Text = "📋 Copy Discord" end end)
        end
    end)

    -- Guarda referencias
    gui.closeBtn = closeBtn
    gui.overlay = overlay
    gui.screenGui = screenGui

    -- Hacer que overlay cierre si se clickea fuera (opcional)
    overlay.MouseButton1Down = overlay.MouseButton1Down or function() end -- overlay es Frame, no Button
end

-- ---------- ANIMACIONES (entrada / salida) ----------
local function animateOpen()
    local main = gui.main
    local screenGui = gui.screenGui
    local overlay = gui.overlay

    overlay.Visible = true

    main.AnchorPoint = Vector2.new(0.5,0.5)
    main.Position = UDim2.new(0.5,0,0.5,0)
    main.Size = UDim2.new(0, 520, 0, 280) -- inicio más pequeño
    main.BackgroundTransparency = 1

    -- Fade in overlay
    overlay.BackgroundTransparency = 1
    TweenService:Create(overlay, TweenInfo.new(0.28, Enum.EasingStyle.Quad), {BackgroundTransparency = 0.5}):Play()
    -- Scale & reveal main
    local t1 = TweenService:Create(main, TweenInfo.new(0.28, Enum.EasingStyle.Back), {Size = UDim2.new(0,720,0,380), BackgroundTransparency = 0})
    t1:Play()
end

local function animateClose()
    local main = gui.main
    local overlay = gui.overlay
    -- shrink and fade
    local t1 = TweenService:Create(main, TweenInfo.new(0.22, Enum.EasingStyle.Quad), {Size = UDim2.new(0,420,0,220), BackgroundTransparency = 1})
    local t2 = TweenService:Create(overlay, TweenInfo.new(0.22, Enum.EasingStyle.Quad), {BackgroundTransparency = 1})
    t1:Play()
    t2:Play()
    t1.Completed:Connect(function()
        if gui and gui.screenGui then
            gui.screenGui:Destroy()
            gui = {}
        end
    end)
end

-- ---------- Inicializar y conexiones ----------
createUI()
-- referencias a main y close (asignadas dentro de createUI)
-- obtener main y close por búsqueda (por si)
gui.main = gui.main or PlayerGui:FindFirstChild("GalaxyHub_UI") and PlayerGui.GalaxyHub_UI:FindFirstChild("Main")
gui.closeBtn = gui.closeBtn or (gui.main and gui.main:FindFirstChild("Header") and gui.main.Header:FindFirstChild("CloseBtn"))

-- abrir animación
animateOpen()

-- Cerrar con X
if gui.closeBtn then
    gui.closeBtn.MouseButton1Click:Connect(function()
        animateClose()
    end)
end

-- Cerrar con ESC
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Escape then
        if gui.main and gui.screenGui then
            animateClose()
        end
    end
end)
